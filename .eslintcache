[{"C:\\Users\\db2\\Downloads\\quote\\quotealeatory\\src\\index.js":"1","C:\\Users\\db2\\Downloads\\quote\\quotealeatory\\src\\App.js":"2"},{"size":434,"mtime":1612200612000,"results":"3","hashOfConfig":"4"},{"size":1931,"mtime":1612196084000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1gg09uz",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\db2\\Downloads\\quote\\quotealeatory\\src\\index.js",[],["12","13"],"C:\\Users\\db2\\Downloads\\quote\\quotealeatory\\src\\App.js",["14"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport quotes from './quotes.json'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\n \n\n\nconst QuotesApp=({colorRandom, buttonColor})=> {\n const [isQuotes, setIsQuotes] = useState(\"\")\n const[isAuthor, setIsAuthor] = useState(\"\")\n\n\n    useEffect(() => {\n      getQuotes();\n    }, [])\n\n  const getQuotes = () => {\n    let quotesData = quotes.quotes\n    let random = Math.floor(Math.random() * quotesData.length)\n    console.log(random)\n    let randomQuote = quotesData[random]\n    console.log(randomQuote)\n    setIsQuotes(randomQuote.quote)\n    setIsAuthor(randomQuote.author)\n    \n  }\n\n  const handleQUotes = () => {\n    getQuotes()\n  }\n\n  return (\n\n \n    <div className=\"body changecolor\" >\n     <div className= \"card\">\n       <div className= \"quote\">\n         <p>{isQuotes}</p>\n         <p className=\"author\">-{isAuthor}-</p>\n         </div>       \n       <div className=\"buttons\">\n         <a href={`https://twitter.com/intent/tweet?text=${isQuotes}${isAuthor}`} target=\"_blank\" className=\"nextquote\"   style={{backgroundColor: buttonColor }}  ><FontAwesomeIcon icon={faTwitter}  /></a>\n                  \n          <button onClick={()=> {\n            handleQUotes()\n            colorRandom()\n            \n          }}  className=\"nextquote \" style={{backgroundColor: buttonColor }} >Next Quote </button>\n       </div>      \n     </div>\n     \n    </div>\n  );\n\n}\n\n\nfunction App() {\n  const [isChangeColor, setIsChangeColor]= useState(\"#f3da75\") \n  const handleChangeColor =()=> {\n    const randomColor = \"#\"+ Math.floor(Math.random() * 16777215).toString(16)\n     setIsChangeColor(randomColor)\n  }\n  return (\n    <div style={{backgroundColor: isChangeColor }}>\n      <QuotesApp colorRandom={handleChangeColor} buttonColor={isChangeColor}/>\n    </div>\n  )\n}\n\nexport default App;\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":43,"column":10,"nodeType":"21","endLine":43,"endColumn":165},"no-native-reassign",["22"],"no-negated-in-lhs",["23"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]